################################################################################
# This file was generated by Ansible for {{ansible_fqdn}}
# Do NOT modify this file by hand!
################################################################################

{% if item.key == "default" %}
server {
    listen        {{ item.value.listen | default(80) }} default_server;
    listen   [::]:{{ item.value.listen | default(80) }} default_server;
    server_name _;
    return        444;

    access_log {{ nginx_revproxy.dirs.logs }}{{ item.key }}_access.log;
    error_log {{ nginx_revproxy.dirs.logs }}{{ item.key }}_error.log {{ item.value.log_level | default('error') }};

}

server {
    listen        {{ item.value.listen_ssl | default(443) }} ssl http2 default_server;
    listen   [::]:{{ item.value.listen_ssl | default(443) }} ssl http2 default_server;
    server_name _;
    return        444;

    access_log {{ nginx_revproxy.dirs.logs }}{{ item.key }}_access.log;
    error_log {{ nginx_revproxy.dirs.logs }}{{ item.key }}_error.log {{ item.value.log_level | default('error') }};

    ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
    ssl_session_timeout {{ nginx_revproxy_config.ssl_session_timeout|default('5m') }};
    ssl_protocols {{ nginx_revproxy_config.ssl_protocols|default('TLSv1.1 TLSv1.2 TLSv1.3') }};
    ssl_ciphers {{ nginx_revproxy_config.ssl_ciphers|default('EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH') }};
    ssl_prefer_server_ciphers {{ nginx_revproxy_config.ssl_prefer_server_ciphers|default('on') }};
    ssl_session_cache {{ nginx_revproxy_config.ssl_session_cache|default('shared:SSL:10m') }};
}

{% else %}
upstream {{ item.key }}_backend  {
{% for upstream in item.value.upstreams %}
     server {{upstream.backend_address}}:{{upstream.backend_port}};
{% endfor %}
}

server {
    listen         {{ item.value.listen | default(80) }};
    listen    [::]:{{ item.value.listen | default(80) }};
    server_name    {{ item.value.domains | join(' ') }};
    location / {
    return         301 https://$server_name$request_uri;
    }

    location /.well-known/acme-challenge {
       alias {{ nginx_revproxy.dirs.html }}{{ item.key }}/.well-known/acme-challenge;
    }

    access_log {{ nginx_revproxy.dirs.logs }}{{ item.key }}_access.log;
    error_log {{ nginx_revproxy.dirs.logs }}{{ item.key }}_error.log {{ item.value.log_level | default('error') }};

}

{% if not __skip_letsencrypt|default(false) %}
server {
    listen        {{ item.value.listen_ssl | default(443) }} ssl http2;
    listen   [::]:{{ item.value.listen_ssl | default(443) }} ssl http2;
    server_name {{ item.value.domains | join(' ') }};

{% if item.value.hsts_max_age is defined %}
    add_header Strict-Transport-Security "max-age={{ item.value.hsts_max_age }}; includeSubDomains; preload" always;
{% endif %}

    access_log {{ nginx_revproxy.dirs.logs }}{{ item.key }}_access.log;
    error_log {{ nginx_revproxy.dirs.logs }}{{ item.key }}_error.log {{ item.value.log_level | default('error') }};

{% if item.value.letsencrypt|default(false) %}
    ssl_certificate /etc/letsencrypt/live/{{ item.key }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ item.key }}/privkey.pem;
{% else %}
    ssl_certificate {{ item.value.ssl_certificate | default('/etc/ssl/certs/ssl-cert-snakeoil.pem') }};
    ssl_certificate_key {{ item.value.ssl_certificate_key | default ('/etc/ssl/private/ssl-cert-snakeoil.key') }};
{% endif %}
    ssl_session_timeout {{ nginx_revproxy_config.ssl_session_timeout|default('5m') }};
    ssl_protocols {{ nginx_revproxy_config.ssl_protocols|default('TLSv1.1 TLSv1.2 TLSv1.3') }};
    ssl_ciphers {{ nginx_revproxy_config.ssl_ciphers|default('EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH') }};
    ssl_prefer_server_ciphers {{ nginx_revproxy_config.ssl_prefer_server_ciphers|default('on') }};
    ssl_session_cache {{ nginx_revproxy_config.ssl_session_cache|default('shared:SSL:10m') }};

    location /.well-known/acme-challenge {
       alias {{ nginx_revproxy.dirs.html }}{{ item.key }}/.well-known/acme-challenge;
    }

    location / {
       gzip off;
       proxy_set_header X-Forwarded-Ssl on;
       client_max_body_size {{ item.value.client_max_body_size | default('50M') }};
       proxy_read_timeout {{ item.value.proxy_read_timeout | default('300') }};
       proxy_set_header Upgrade $http_upgrade;
{% if item.value.conn_upgrade is not defined or item.value.conn_upgrade %}
       proxy_set_header Connection "upgrade";
{% endif %}
       proxy_set_header Host $http_host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_set_header X-Frame-Options SAMEORIGIN;
       proxy_pass {{ item.value.backend_protocol | default('http') }}://{{ item.key }}_backend;
{% if item.value.auth is defined %}
       auth_basic "Restricted Content";
       auth_basic_user_file {{ nginx_revproxy.dirs.htpasswd }}{{ item.key }}_htpasswd;
{% endif %}
    }
}
{% endif %}
{% endif %}
