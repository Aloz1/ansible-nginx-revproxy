---

- name: Install certbot
  get_url:
    url: https://dl.eff.org/certbot-auto
    dest: /usr/bin/certbot-auto
    mode: "a+x"
  tags:
    - nginx-revproxy
    - lesencrypt

- name: Get Active Sites
  shell: ls -1 /etc/nginx/sites-enabled/
  register: active
  changed_when: "active.stdout_lines != nginx_revproxy_sites.keys()|sort()"
  check_mode: no
  tags:
    - nginx-revproxy
    - lesencrypt

- name: Enable sites for ACME protocol 
  block:
    - name: Add Https Site Config
      register:
        siteconfig
      template:
        src=reverseproxy_ssl.conf.j2
        dest=/etc/nginx/sites-available/{{ item.key }}.conf
        owner=root
        group=root
      with_dict: "{{ nginx_revproxy_sites }}"
      when:
        - item.value.letsencrypt | default(False)
        - item.key not in active.stdout_lines

    - name: Enable Site Config
      file:
        src=/etc/nginx/sites-available/{{ item.key }}.conf
        dest=/etc/nginx/sites-enabled/{{ item.key }}
        state=link
      with_dict: "{{ nginx_revproxy_sites }}"
      register: site_enabled
      when:
        - siteconfig|success
        - not ansible_check_mode
        - item.value.letsencrypt | default(False)   
        - item.key not in active.stdout_lines

    - name: Reload Nginx
      service: name=nginx state=reloaded
      when:
        - site_enabled|success
      
  when:
    - nginxinstalled|success
    - active.changed
  tags:
    - nginx-revproxy
    - lesencrypt

- name: Generate certs (first time)
  command: certbot-auto certonly --webroot -w /var/www/{{ item.key }} -d {{ item.value.domains | join(' -d ') }} --email {{ item.value.letsencrypt_email }} --non-interactive --agree-tos creates=/etc/letsencrypt/live/{{ item.key }}/fullchain.pem
  with_dict: "{{ nginx_revproxy_sites }}"
  when: item.value.letsencrypt | default(False)
  tags:
    - nginx-revproxy
    - lesencrypt

- name: Update Site Config
  template:
    src=reverseproxy_ssl_letsencrypt.conf.j2
    dest=/etc/nginx/sites-available/{{ item.key }}.conf
    owner=root
    group=root
  with_dict: "{{ nginx_revproxy_sites }}"
  when:
    - item.value.letsencrypt | default(False)
  notify:
    - Reload Nginx
  tags:
    - nginx-revproxy
    - lesencrypt

- name: Insert cert-bot renew in crontab
  cron:
    name: "cert-bot renew"
    minute: 30
    hour: 3
    weekday: 1
    job: 'certbot-auto renew --post-hook "systemctl reload nginx" >> /var/log/letsencrypt/letsencrypt-update.log 2>&1'
  tags:
    - nginx-revproxy
    - lesencrypt
