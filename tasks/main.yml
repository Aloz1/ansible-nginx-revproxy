---

- name: Install Nginx
  apt: name=nginx state=present
  register:
    nginxinstalled
  tags:
    - packages
    - nginx-revproxy

- name: Add Site Config
  when:
    - nginxinstalled is success
    - item.value.ssl != True | default(True)
    - item.value.letsencrypt != True | default(True)
  register:
    siteconfig
  template:
    src=reverseproxy.conf.j2
    dest=/etc/nginx/sites-available/{{ item.key }}.conf
    owner=root
    group=root
  with_dict: "{{ nginx_revproxy_sites }}"
  tags:
    - nginx-revproxy

- name: Add Https Site Config
  when:
    - nginxinstalled is success
    - item.value.ssl | default(False)
    - item.value.letsencrypt != True | default(True)
  register:
    siteconfig
  template:
    src=reverseproxy_ssl.conf.j2
    dest=/etc/nginx/sites-available/{{ item.key }}.conf
    owner=root
    group=root
  with_dict: "{{ nginx_revproxy_sites }}"
  tags:
    - nginx-revproxy

- name: Get Active Sites
  shell: ls -1 /etc/nginx/sites-enabled/
  register: active
  changed_when: "active.stdout_lines != nginx_revproxy_sites.keys()|sort()"
  check_mode: no
  tags:
    - nginx-revproxy

- name: De-activate Sites
  file: path=/etc/nginx/sites-enabled/{{ item }} state=absent
  with_items: "{{ active.stdout_lines }}"
  when: item not in nginx_revproxy_sites
  notify: Reload Nginx
  tags:
    - nginx-revproxy

- name: Enable Site Config
  when:
    - siteconfig is success
    - item.value.letsencrypt != True | default(True)
    - not ansible_check_mode
  file:
    src=/etc/nginx/sites-available/{{ item.key }}.conf
    dest=/etc/nginx/sites-enabled/{{ item.key }}
    state=link
  with_dict: "{{ nginx_revproxy_sites }}"
  notify:
    - Reload Nginx
  tags:
    - nginx-revproxy

- name: Create WebRoot sites
  when:
    nginxinstalled is success
  file:
    dest=/var/www/{{ item.key }}/.well-known
    mode=775
    state=directory
    owner=www-data
    group=www-data
  with_dict: "{{ nginx_revproxy_sites }}"
  notify:
    - Reload Nginx
  tags:
    - nginx-revproxy

- name: WebRoot Permissions Sites
  when:
    nginxinstalled is success
  file:
    dest=/var/www/{{ item.key }}
    mode=775 state=directory
    owner=www-data
    group=www-data
    recurse=yes
  with_dict: "{{ nginx_revproxy_sites }}"
  notify:
    - Reload Nginx
  tags:
    - nginx-revproxy

- name: Get WebRoot Sites
  shell: ls -1 /var/www/
  register: webroot
  changed_when: "webroot.stdout_lines != nginx_revproxy_sites.keys()|sort()"
  check_mode: no
  tags:
    - nginx-revproxy

- name: Remove WebRoot Sites
  file: path=/var/www/{{ item }}/ state=absent
  with_items: "{{ webroot.stdout_lines }}"
  when: item not in nginx_revproxy_sites
  notify:
    - Reload Nginx
  tags:
    - nginx-revproxy

- include_tasks: letsencrypt.yml
  tags:
    - nginx-revproxy
    - lesencrypt

